

@using LAHJA.Data.UI.Components.Base
@using MudBlazor
@using System.ComponentModel.DataAnnotations
@* @inherits LayoutComponentBase *@

@inherits CardAuth<DataBuildAuthBase>

<MudText Typo="Typo.h6">
    <h4 class="d-flex align-center justify-content-center flex-column">
        Confirmation  Email
    </h4>
</MudText>

@* <MudDialog Class="col-5"  DefaultFocus="DefaultFocus.LastChild">
    <TitleContent>
    
    </TitleContent>
    <DialogActions>

    </DialogActions>
    <DialogContent> *@
        <MudContainer Style="width:100% !important" class="w-100 border  d-flex align-center justify-content-center flex-column">


            <MudForm Style="width:100% !important" @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <div class="d-flex align-center justify-content-center flex-column" style="padding:2% 2%;margin:auto 10px;width:100% !important ">
                    <MudTextField @bind-Value="code" Label="Reset Code" Required="true" Class="mt-4" />
                    @* <MudTextField @bind-Value="email" Label="البريد الإلكتروني" Type="email" Required="true" Class="mt-4" /> *@

                   
                    <MudTextField T="string" Class="my-5" FullWidth Label="Email" Required="true" RequiredError="Email is required!"
                                  Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" @bind-Value="@email" />

                 

                    <MudCardActions Class="col-12 mt-5 row d-flex flex-wrap justify-content-around align-content-around">
                <MudButton Variant="Variant.Filled" Color="@Color.Primary" Class="col-lg-4 col-md-7 col-sm-12" OnClick="onSubmitConfirmEmail" Disabled="isLoading">
                            Confirm Email
                        </MudButton>
                        <MudButton OnClick="onCloseDialog" Variant="Variant.Text" Class="col-lg-4 col-md-7 col-sm-12" Color="Color.Secondary">Cancel</MudButton>
                    </MudCardActions>

                </div>
            </MudForm>

        </MudContainer>

   

@code{



    [Parameter] public string Email { get; set; }
    [Parameter] public string Code{ get; set; }
    protected override void OnInitialized()
    {

        if (Email != null)
        {
           
            if (Code!=null){
                email = Email;
                code = Code;
                StateHasChanged();
                
            
            }
        }
        base.OnInitialized();
    }
    async Task onSubmitConfirmEmail()
    {

        if (OnSubmitConfirmEmail.HasDelegate)
        {

            await OnSubmitConfirmEmail.InvokeAsync(new DataBuildAuthBase { Email = email, Code = code });
        }
    }
        }
@*     </DialogContent>

</MudDialog> *@


  @* <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
     <MudPaper Class="pa-4">


         <MudText Typo="Typo.h6">
             <h4 class="d-flex align-center justify-content-center flex-column">  </h4>
         </MudText>
        
         @if (isLoading)
         {
             <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
         }

         @if (!isLoading && errors != null)
         {
             @foreach (var messsage in errors)
             {
                   <MudAlert Severity="Severity.Error">@messsage</MudAlert>
             }
         }
         <MudForm Style="width:100% !important" @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
            
         </MudForm>

     </MudPaper>
 </MudContainer>  *@





@* 
<h3>ResendConfirmationEmail</h3>
<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    <MudPaper Class="pa-4">
        @* <MudTypography Variant="H5" Align="Center">مرحباً بك في مكوّن MudBlazor</MudTypography> *@
        
     @*    <MudAlert Severity="Error" Style="display:@(ErrorMessage != null ? "block" : "none")">
            @ErrorMessage
        </MudAlert>

        <MudTextField @bind-Value="InputValue" Label="أدخل النص هنا" Placeholder="اكتب شيئًا..." Immediate="true" Adornment="Adornment.Start">
            <AdornmentIcon>text_fields</AdornmentIcon>
        </MudTextField>

        <MudButton Variant="Filled" Color="Primary" Class="mt-4" OnClick="ProcessInput">تنفيذ</MudButton>

        <MudSpacer />

        <MudList>
            @foreach (var result in Results)
            {
                <MudListItem>
                    <MudText>✅ @result</MudText>
                </MudListItem>
            }
        </MudList> *@
 @*    </MudPaper>
</MudContainer> *@

@code {
    // private string? InputValue;
    // private List<string> Results = new();
    // private string? ErrorMessage;

    // private async Task ProcessInput()
    // {
    //     try
    //     {
    //         ErrorMessage = null;

    //         if (string.IsNullOrWhiteSpace(InputValue))
    //         {
    //             throw new InvalidOperationException("الحقل لا يمكن أن يكون فارغاً.");
    //         }

    //         // Simulate processing input
    //         await Task.Delay(500);
    //         Results.Add($"تمت معالجة: {InputValue}");

    //         // Reset input
    //         InputValue = string.Empty;
    //     }
    //     catch (Exception ex)
    //     {
    //         ErrorMessage = ex.Message;
    //     }
    // }
}
 
