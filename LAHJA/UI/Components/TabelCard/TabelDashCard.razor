@using LAHJA.Data.UI.Components
@using LAHJA.UI.Components.TabelCard
@typeparam T
<style>
    .custom-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 10px;
        margin: 20px auto;
    }

    .custom {
        /*         justify-content: flex-end; /* محاذاة العناصر لليمين */
        */ /* /*              margin-top: -6%;}
     */ */ display: flex;
        /*    flex-wrap: wrap; */
        gap: 10px;
    }

    .Clearable {
        height: 175%;
        margin-top: -18%;
    }
</style>

<div class="p-5">
    <div class="p-1 RCardP">
    <MudAlert Severity="Severity.Normal" Variant="Variant.Filled">
        @localization[languageIndex]["ReactorType"]
        <MudIcon Icon="@Icons.Material.Filled.ArrowForward" Size="Size.Small" />
        <MudChip T="string" Icon="@Icons.Custom.Uncategorized.Radioactive" Label="true" Color="Color.Primary" style="background:#fff; color:#000000;" OnClose="CloseChip">@localization[languageIndex]["NewTweets"]</MudChip>
    </MudAlert>


     <StateCountCard  Params="StateCounts" />

        <ActionTabelCard Params="ActionTabels.Actions"
                         ChipClicked="ActionTabels.ChipClicked" />

    </div>
    @if(DataAndEventBuildTabel.DataBuild.Count>0){
    <TabelData T="T" DataBuild="DataAndEventBuildTabel.DataBuild" 
                      Events="DataAndEventBuildTabel.Events"
                      LabelColumns="DataAndEventBuildTabel.LabelColumns"
                      FixedHeader="DataAndEventBuildTabel.FixedHeader"
        />
    }
    else
    {
        <PlanCreateStart Params="PlanCreateStartData" OnClick="ActionTabels.ChipClicked" />
    }

</div>



@code {

    [Parameter] public DataAndEventBuildTabelCard<T>? DataAndEventBuildTabel{ set; get; }
    // بيانات افتراضية مشابهة لبيانات JSON التي قدمتها
    [Parameter] public List<CardStateCount<string>>? StateCounts { set; get; }

    [Parameter]
    public PlanCreateStartData PlanCreateStartData { set; get; } = new();
    [Parameter] public GroupActionTabels? ActionTabels { set; get; }



    private bool fixedheader = true;
    private string _string = string.Empty;

    // فهرس اللغة
    private int languageIndex = 0; // 0 لـ اللغة الإنجليزية و 1 لـ اللغة العربية

    // بيانات الترجمة
  
  
    protected override void OnInitialized()
    {
        


    }



    // دالة لغلق الـ Chip
    private void CloseChip()
    {
        // منطق لغلق الـ Chip
    }

   
}
    // تعريف كائن البيانات

