
@using Domain.ShareData
@using LAHJA.Data.UI.Components

@using LAHJA.UI.Components.ServiceCard
@using LAHJA.UI.Components.TabelCard
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject NavigationManager Navigation;


<TabelDashCard T="DataBuildUserSubscriptionInfo" DataAndEventBuildTabel="dataAndEvent" 
StateCounts="cardStates"
ActionTabels="groupAction"
BarTabel="TranslationsLST" />


@code{
    [Parameter]public  List<DataBuildUserSubscriptionInfo>? DataBuild{ set; get; }

    private static readonly Dictionary<string, Dictionary<string, string>> TranslationsLST = new()
        {
            ["en"] = new()
            {
                ["Text1"] = "Upgrate your Subscription",
                ["Text2"] = "AI لهجة",
                ["Description"] = "LAHJA platform provides a smart way to communicate with AI in your own dialect.",
                ["ButtonLink"] = "Create Space"
            },
            ["ar"] = new()
            {
                ["Text1"] = "حدث  اشتراك ",
                ["Text2"] = "لهجة AI",
                ["Description"] = "توفر  منصة لهجة  طريقة ذكية للتواصل مع الذكاء الاصطناعي بلهجتك الخاصة.",
                ["ButtonLink"] = "تحديث الاشتراك  "
            }
        };


    DataAndEventBuildTabelCard<DataBuildUserSubscriptionInfo> dataAndEvent = null;
    private string lg = "ar";
    protected override void OnInitialized()
    {



        dataAndEvent = new()
            {
                DataBuild = DataBuild,
            //    LabelColumns = ColumnsTrans[lg].ToList(),

                Events = new()
                {
                    OnRowClicked = EventCallback.Factory.Create<DataBuildUserSubscriptionInfo>(this, OnRowClicked)
                }
            };

        cardStates = new()
        {

            new()
            {
                Value="6",
                Label="Active"

            },

             new()
            {
                 Value="1",
                Label="UnActive"
            }
            ,
            new()
            {
                 Value="1",
                Label="UnActive"
            }
            ,
            new()
            {
                 Value="1",
                Label="UnActive"
            }



        };
        groupAction.Actions = new()
        {
             new()
            {
                Icon=@Icons.Material.Filled.AddCircle
                ,

            },
              new()
            {
                Icon=@Icons.Material.Filled.AddCircle
                ,

            }
            ,

            new()
            {
                Icon=@Icons.Material.Filled.AddCircle
                ,
                Tag="create"
            },
            new()
            {
                Icon=@Icons.Material.Filled.Delete
                ,
                IsMudChip=false,
                Tag="delete"
            }
        };
        groupAction.ChipClicked += OnChipClicked;
    }


    List<CardStateCount<string>>? cardStates = null;

    GroupActionTabels groupAction = new GroupActionTabels();

    private Task OnRowClicked(DataBuildUserSubscriptionInfo data)
    {

        Navigation.NavigateTo($"/settings/spaces/{data.Id}");
        return Task.CompletedTask;

    }

    private Task OnChipClicked(CardActionTabel action)
    {
        if (action.Tag == "delete")
        {
            Snackbar.Add("fgffg", Severity.Error);

        }
        else if(action.Tag=="create")
        {
            OpenDialog();
        }

        return Task.CompletedTask;

    }

    private void OpenDialog()
    {


        
        var options = new DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };


        var parameters = new DialogParameters<DialogContent>
        {

            { x =>x.DataBuild1,null },

            {x => x.DataBuildCheck,null},
            {x=>x.SrcIframe,"https://lahja-core.onrender.com/createspace"}
        };

        DialogService.Show<DialogContent>("", parameters, options);
    }




	// List<DataBuildUserSubscriptionInfo> GetEnglishSubscriptions()
 //    {
 //        return new List<DataBuildUserSubscriptionInfo>
 //        {
 //            new DataBuildUserSubscriptionInfo { Id = "1", BillingPeriod = "Monthly", StartDate = new DateTime(2024, 1, 1), Status = "Active", CancelAtPeriodEnd = false, ProductName = "Bronze Subscription", NumberRequests = 100, Amount = 50.00m, Active = true, Description = "Monthly subscription for new users", UpdatedAt = new DateTime(2024, 1, 2), CreatedAt = new DateTime(2024, 1, 1) },
 //            new DataBuildUserSubscriptionInfo { Id = "2", BillingPeriod = "Yearly", StartDate = new DateTime(2023, 6, 15), Status = "Suspended", CancelAtPeriodEnd = true, ProductName = "Silver Subscription", NumberRequests = 500, Amount = 300.00m, Active = false, Description = "Yearly subscription with extra benefits", UpdatedAt = new DateTime(2023, 12, 15), CreatedAt = new DateTime(2023, 6, 15) }
 //        };
 //    }

 //     List<DataBuildUserSubscriptionInfo> GetArabicSubscriptions()
 //    {
 //        return new List<DataBuildUserSubscriptionInfo>
 //        {
 //            new DataBuildUserSubscriptionInfo { Id = "3", BillingPeriod = "شهري", StartDate = new DateTime(2023, 9, 10), Status = "نشط", CancelAtPeriodEnd = false, ProductName = "اشتراك ذهبي", NumberRequests = 1000, Amount = 100.00m, Active = true, Description = "اشتراك ذهبي مع أولوية الدعم الفني", UpdatedAt = new DateTime(2024, 1, 10), CreatedAt = new DateTime(2023, 9, 10) },
 //            new DataBuildUserSubscriptionInfo { Id = "4", BillingPeriod = "نصف سنوي", StartDate = new DateTime(2023, 3, 1), Status = "ملغي", CancelAtPeriodEnd = true, ProductName = "اشتراك بلاتيني", NumberRequests = 2000, Amount = 500.00m, Active = false, Description = "اشتراك نصف سنوي مع وصول غير محدود", UpdatedAt = new DateTime(2023, 9, 1), CreatedAt = new DateTime(2023, 3, 1) }
 //        };
 //    }


        public Dictionary<string, string[]> ColumnsTrans = new Dictionary<string, string[]>
    {
        { "en", new string[] {
            "Id",
            "BillingPeriod",
            "StartDate",
            "Status",
            "CancelAtPeriodEnd",
            "ProductName",
            "NumberRequests",
            "Amount",
            "Active",
            "Description",
            "UpdatedAt",
            "CreatedAt"
        }},
        { "ar", new string[] {
            "معرف",
            "فترة الفوترة",
            "تاريخ البدء",
            "الحالة",
            "إلغاء في نهاية الفترة",
            "اسم المنتج",
            "عدد الطلبات",
            "المبلغ",
            "نشط",
            "الوصف",
            "تاريخ التحديث",
            "تاريخ الإنشاء"
        }}
    };
    

}