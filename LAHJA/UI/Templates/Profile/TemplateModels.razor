
@using LAHJA.Data.UI.Components



@using LAHJA.UI.Components.ProFile.Settings


@inject LAHJA.Data.UI.Templates.Profile.TemplateProfile Template





@using LAHJA.Data.UI.Components
@using LAHJA.UI.Components.ServiceCard
@using LAHJA.UI.Components.TabelCard
@inject IDialogService DialogService
@inject ISnackbar Snackbar

@if (Template != null && dataAndEvent!=null)
{
    <TabelDashCard T="DataBuildUserModelAi" DataAndEventBuildTabel="dataAndEvent"
                   StateCounts="cardStates"
                   ActionTabels="groupAction"
                   BarTabel="TranslationsLST" />
}


@code {



    DataAndEventBuildTabelCard<DataBuildUserModelAi> dataAndEvent = null;
    private string lg = "ar";



    [Parameter]
    public string subscriptionId { set; get; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {



        if (firstRender)
        {

            dataAndEvent = new()
                {
                    DataBuild = await Template.GetDataBuildModelAis(),//new(),
                                                                      //   LabelColumns = ColomsTrans[lg].ToList(),

                    Events = new()
                };

            cardStates = new()
        {

            new()
            {
                Value="6",
                Label="Active"

            },

             new()
            {
                 Value="1",
                Label="UnActive"
            }
            ,


        };
            groupAction.Actions = new()
        {
            new()
            {
                Icon=@Icons.Material.Filled.AddCircle
                ,
                Tag="create"
                ,
                Name="انشاء"
            },
            new()
            {
                Icon=@Icons.Material.Filled.Delete
                ,
                IsMudChip=false,
                Tag="delete"
            }
        };
            groupAction.ChipClicked += OnChipClicked;

        }

        StateHasChanged();
    }


    List<CardStateCount<string>>? cardStates = null;

    GroupActionTabels groupAction = new GroupActionTabels();

    private Task OnChipClicked(CardActionTabel action)
    {
        if (action.Tag == "delete")
        {
            Snackbar.Add("fgffg", Severity.Error);

        }
        else if (action.Tag == "create")
        {
            OpenDialog();
        }

        return Task.CompletedTask;

    }

    private void OpenDialog()
    {



        var options = new DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Large, FullWidth = true };


        var parameters = new DialogParameters<DialogContent>
        {

            { x =>x.DataBuild1,null },

            {x => x.DataBuildCheck,null},
            {x=>x.SrcIframe,"https://lahja-core.onrender.com/createspace"}
        };

        DialogService.Show<DialogContent>("", parameters, options);
    }

    private static readonly Dictionary<string, Dictionary<string, string>> TranslationsLST = new()
        {
            ["en"] = new()
            {
                ["Text1"] = "create your spaces",
                ["Text2"] = "AI لهجة",
                ["Description"] = "LAHJA platform provides a smart way to communicate with AI in your own dialect.",
                ["ButtonLink"] = "Create Space"
            },
            ["ar"] = new()
            {
                ["Text1"] = "اخنر  نماذج الذكاء الاصطناعي" ,
                ["Text2"] = "لهجة AI",
                ["Description"] = "توفر  منصة لهجة  طريقة ذكية للتواصل مع الذكاء الاصطناعي بلهجتك الخاصة.",
                ["ButtonLink"] = "انشاء نموذج "
            }
        };







}
