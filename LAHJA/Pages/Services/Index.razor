@page "/services"
@using LAHJA.UI.Components.ServiceCard
@using LAHJA.UI.Components.StudioLahjaAi
@using LAHJA.UI.Templates.Carousel
@using LAHJA.UI.Templates.CategoriesPlan
@using LAHJA.UI.Templates.Plans
@using LAHJA.UI.Templates.Services
@using LAHJA.UI.Components.TabelCard
<style>
    .custom-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 10px;
/*         margin: 20px auto;
 */    
}

    .section-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }

    
</style>
@* 
<TemplateServices />
<TabelAbdDashCard />
 *@
@*  <MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h5">Uranium-235</MudText>
        </CardHeaderContent>
    </MudCardHeader>
        <MudDivider Vertical="true" FlexItem="true" />

    <MudCardContent>
        <MudText>This is the type of uranium used in the RBMK reactors.</MudText>
        <MudDivider DividerType="DividerType.Middle" Class="my-6"/>
        <MudText GutterBottom="true">Select Reactor Type</MudText>
        <MudChip T="string" Color="Color.Secondary">RBMK-1000</MudChip><MudChip T="string">RBMK-1500</MudChip><MudChip T="string">RBMKP-2400</MudChip>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
    </MudCardActions>
</MudCard> 
<div class="⚙ aƨp ⚙159ed3m">
    <div class="⚙ rƨ2   aƨti aƨp aƨ2q aƨtj aƨ3t aƨ3p aƨ3s aƨ3q aƨtk aƨtl aƨtm aƨtn aƨto aƨtp aƨ1o aƨ1p aƨ1q aƨ1r aƨls aƨlr aƨ17 ⚙nka1l ⚙ rƨ1 rƨ0 aƨo aƨrc aƨtq aƨkk aƨ2g aƨ7x aƨlt aƨlu aƨq aƨ2l aƨ5j ⚙178t3ah"><svg aria-hidden="true" width="16" height="16" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" class="⚙    aƨ56 aƨ57 aƨ58 aƨ15 aƨ4u aƨtr aƨts aƨp aƨ3h aƨly aƨ9c aƨtt aƨe aƨm0 aƨm1 ⚙b87mv3"><path d="M5 13.25a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75Zm1 1.25h4v.5a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1v-.5Z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M11.05 8.014c.594-.691.95-1.583.95-2.56C12 3.283 10.22 1.5 8 1.5c-2.22 0-4 1.782-4 3.955 0 .976.356 1.868.95 2.56.522.605 1.067 1.452 1.213 2.485h3.674c.146-1.033.691-1.88 1.212-2.486Zm1.136.978c-.498.58-.886 1.277-.886 2.04a.967.967 0 0 1-.967.968H5.667a.967.967 0 0 1-.967-.967c0-.764-.388-1.461-.886-2.04A5.407 5.407 0 0 1 2.5 5.454C2.5 2.442 4.962 0 8 0s5.5 2.442 5.5 5.455c0 1.35-.495 2.585-1.314 3.537Z"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M8.125 4.25c-.76 0-1.375.616-1.375 1.375a.625.625 0 1 1-1.25 0A2.625 2.625 0 0 1 8.125 3a.625.625 0 1 1 0 1.25Z"></path></svg><div class="⚙ rƨ1 aƨo aƨgt aƨ17 aƨ4j ⚙12gvcxj"><span class="⚙ rƨ1 aƨ27 aƨgt aƨ1e aƨm2 ⚙1fo9fsw"><span class="⚙ rƨ0 aƨlt ⚙ns3z9v"><span class="⚙  rƨ0 aƨtu aƨtv aƨk aƨtw aƨtx ⚙1in8p5t"><span>Run a simulation on this subscription</span></span></span><span class="⚙ rƨ0 aƨm3 aƨbs ⚙1gvrce5"><span class="⚙  rƨ0 aƨtu aƨty aƨay aƨtw aƨtx ⚙185ecpj"><span>Model this subscription through time to test your integration. Only in test mode.</span></span></span></span><div class="⚙ rƨ1 rƨ0 aƨo aƨ1n aƨgt aƨm4 aƨu aƨ1e aƨfz ⚙19v7qiq"><a tabindex="0" role="button" class="⚙ rƨ2 rƨ0 rƨ1 rƨ3 rƨ0 rƨ2 rƨ4 rƨ5 aƨ12 aƨ13 aƨ14 aƨo aƨ15 aƨ16 aƨ17 aƨl aƨp aƨ18 aƨ19 aƨ1a aƨ1b aƨ1c aƨ1d aƨ1e aƨ1f aƨ1g aƨfz aƨg0 aƨbu aƨbv aƨbw aƨbx aƨ4i aƨg1 aƨg2 aƨg3 aƨg4 aƨg5 aƨg6 aƨg7 aƨgl aƨg9 aƨga aƨgb aƨgc aƨge aƨgf aƨgg aƨgh aƨgi aƨgm ⚙1his92z"><span>Run simulation</span><svg aria-hidden="true" width="16" height="16" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" class="⚙   aƨ56 aƨ57 aƨ58 aƨ15 aƨ8t aƨ61 aƨ62 ⚙t6yh5y"><path fill-rule="evenodd" clip-rule="evenodd" d="M3.177 1.913a.288.288 0 0 0-.427.252v11.671c0 .22.247.355.426.253l9.935-5.88c.179-.105.179-.321 0-.426-3.323-1.935-6.622-3.91-9.932-5.869h-.002ZM4.063.404A2.012 2.012 0 0 0 3.055.126C1.989.122 1 .966 1 2.165v11.671c0 1.188.985 2.043 2.05 2.04a2 2 0 0 0 1.008-.276l9.937-5.881A1.982 1.982 0 0 0 15 7.996c0-.667-.336-1.333-1.008-1.725-3.322-1.935-6.62-3.91-9.929-5.867Z"></path></svg></a></div></div></div></div>
    *@

<MudCard Class="p-4">
    <MudCardContent style="margin-inline-start: auto !important;">
        <MudText Typo="Typo.h6">Run a simulation on this subscription</MudText>
        <MudText Typo="Typo.body2" Color="Color.Secondary">
            Model this subscription through time to test your integration. Only in test mode.
        </MudText>
    </MudCardContent>

    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.PlayArrow">
            Run Simulation
        </MudButton>
    </MudCardActions>
</MudCard>

<MudCard >
    <MudCardContent class="custom-container" style="margin-inline-start: auto !important;">
<div class="d-flex flex-column align-center">

        <MudText >Select Reactor Type</MudText>
        <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
           </div>
            <MudDivider Vertical="true" FlexItem="true" />
           <div class="d-flex flex-column align-center">

        <MudText GutterBottom="true">Select Reactor Type</MudText>
            <MudButton Variant="Variant.Text" Color="Color.Primary">$@NextInvoiceAmount on @NextInvoiceDate</MudButton>
      </div>
      <div class="d-flex flex-column align-center">

            <MudText GutterBottom="true">    Model this subscription through</MudText>
            <MudButton Variant="Variant.Text" Color="Color.Primary">$@NextInvoiceAmount on @NextInvoiceDate</MudButton>
      </div>
      </MudCardContent>
</MudCard>
<MudCard>
    <MudCardContent class="custom-container" style="margin-inline-start: auto !important; gap: 200px !important;">
        
        <!-- Section 1: Reactor Type Selection -->
        <div class="section-container">
            <MudText GutterBottom="true">Select Reactor Type</MudText>
            <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
        </div>

        <!-- Section 2: Reactor Type Selection (Again) -->
        <div class="section-container">
            <MudText GutterBottom="true">Select Reactor Type</MudText>
            <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
        </div>

        <!-- Section 3: Email Link and Button -->
        <div class="section-container">
            <MudLink Href="#" Typo="Typo.body2">
                admin@gmail.com
                <MudIcon Icon="@Icons.Material.Filled.Person" />
            </MudLink>
            <MudText Typo="Typo.body2" Variant="Variant.Text" Color="Color.Primary">$@NextInvoiceAmount on @NextInvoiceDate</MudText>
        </div>

        <!-- Vertical Divider -->

        <!-- Information Section -->
        <div class="info-section">
            <MudText Typo="Typo.body2">Customer</MudText>
             <MudText Typo="Typo.body2">Created</MudText>
            <MudText Typo="Typo.body2">Current period</MudText>
        </div>
        
    </MudCardContent>
</MudCard>


<InvoiceProperty Label="Started" Value="@StartDate" />
<InvoiceProperty Label="Next Invoice">
    <a href="@NextInvoiceUrl">$@NextInvoiceAmount on @NextInvoiceDate</a>
</InvoiceProperty>
<InvoiceProperty Label="Test Mode Auto-Cancellation" Value="@AutoCancelDate" />

@code {
    private string StartDate = "Jan 27";
    private string NextInvoiceDate = "Feb 27";
    private decimal NextInvoiceAmount = 250.00M;
    private string NextInvoiceUrl = "/test/customers/cus_Rf23xXm2a6TGqt/upcoming_invoice/sub_1QlhzSB7xaGIYuCbChhHGlbH";
    private string AutoCancelDate = "Apr 27";
}

@code {
    private void ShowMenu()
    {
        // Logic to show menu on hover (if needed, use JS interop)
    }
}
@* 
 <TemplateServices   />

@using Microsoft.AspNetCore.Components





   <ContenerChatComponent />

 *@
@* <TemplateCarousel  /> *@

 @* <MudDropContainer T="DropItem" Items="_items" ItemsSelector="@((item, dropzone) => item.Identifier == dropzone)" ItemDropped="ItemUpdated">
     <ChildContent>
         <MudPaper MinHeight="500px" Class="d-flex flex-1">
             <MudList T="string" Dense="true" @bind-SelectedValue="_selectedFolder">
                 <MudListSubheader>Studio AI</MudListSubheader>

                 @foreach (var dropZone in DropZones)

                 {
                     <MudDropZone T="DropItem" Identifier="@dropZone.Identifier" OnlyZone="true">
                         <MudListItem Text="@dropZone.Text" Value="@dropZone.Identifier" Icon="@dropZone.Icon" />
                     </MudDropZone>
                 }

                 <!-- Categories -->
                 <MudListItem Icon="@Icons.Material.Filled.Label" Text="Tune a Model" Expanded="true">
                     <NestedList>
                         @foreach (var category in Categories)

                         {
                             <MudDropZone T="DropItem" Identifier="@category.Identifier" OnlyZone="true">
                                 <MudListItem Dense="true" Text="@category.Text" Value="@category.Identifier" Icon="@category.Icon" Class="pl-8" />
                             </MudDropZone>
                         }
                     </NestedList>
                 </MudListItem>
             </MudList>

             <MudDivider Vertical="true" FlexItem="true" />

             <!-- ToolBar and Items -->
             <MudList T="string" Dense="true" Class="d-flex flex-column flex-grow-1 py-0">
                 <MudToolBar Gutters="false" Dense="true">
                     <MudCheckBox @bind-Value="ToolbarCheckBox" />
                     <MudIconButton Icon="@Icons.Material.Filled.Refresh" />
                     <MudIconButton Icon="@Icons.Material.Filled.MoreVert" />
                     <MudSpacer />
                     <MudIconButton Icon="@Icons.Material.Filled.ChevronLeft" />
                     <MudIconButton Icon="@Icons.Material.Filled.ChevronRight" />
                 </MudToolBar>

                 <MudDivider />

                 <!-- Drop Zone for Selected Folder -->
                 <MudDropZone T="DropItem" Identifier="@_selectedFolder.ToString()" Class="flex-grow-1" />
             </MudList>
         </MudPaper>
     </ChildContent>

     <!-- Item Renderer -->
     <ItemRenderer>
         <MudListItem T="string" Text="@context.Name" />
         <MudDivider />
         <MainCardService    />
     </ItemRenderer>
 </MudDropContainer>
  *@
@code {
    public bool ToolbarCheckBox { get; set; } = false;

    string _selectedFolder = "Inbox";



    private void ItemUpdated(MudItemDropInfo<DropItem> dropItem)

    {

        dropItem.Item.Identifier = dropItem.DropzoneIdentifier;

    }



    private List<DropItem> _items = new()
    {
        new DropItem(){ Name = "Your exchange rate and Klarna benefits here", Identifier = "Get Space Key" },
        new DropItem(){ Name = "IKEA - Betalningsbekräftelse för din order", Identifier = "Create Prompt" },
        new DropItem(){ Name = "Leverans beställd till dig​", Identifier = "Stream Realtime" },
        new DropItem(){ Name = "You’ve Got Sales! Cotton Bureau On Demand Report for Thursday, February 24, 2022", Identifier = "Starter Apps" },
        new DropItem(){ Name = "Answer: Offer to buy mudblazor", Identifier = "Tune a Model" },
        new DropItem(){ Name = "Inloggningsvarning för Facebook Messenger for Android", Identifier = "Social" },
        new DropItem(){ Name = "Nya privata meddelanden på SweClockers", Identifier = "Forums" },
    };



    private List<DropZoneData> DropZones = new()
    {
        new DropZoneData { Identifier = "Inbox", Text = "Get Space Key", Icon = "@Icons.Material.Filled.Inbox" },
        new DropZoneData { Identifier = "Sent", Text = "T2T", Icon = "@Icons.Material.Filled.Send" },
        new DropZoneData { Identifier = "Sent", Text = "T2S", Icon = "@Icons.Material.Filled.Send" },
        new DropZoneData { Identifier = "Sent", Text = "VoiceBot", Icon = "@Icons.Material.Filled.Send" },
        new DropZoneData { Identifier = "Sent", Text = "Stream Realtime", Icon = "@Icons.Material.Filled.Send" },
        new DropZoneData { Identifier = "Drafts", Text = "Starter Apps", Icon = "@Icons.Material.Filled.Drafts" }
    };



    private List<CategoryData> Categories = new()
    {
        new CategoryData { Identifier = "Social", Text = "Social", Icon = "@Icons.Material.Filled.Group" },
        new CategoryData { Identifier = "Forums", Text = "Forums", Icon = "@Icons.Material.Filled.Forum" }
    };



    public class DropItem

    {

        public string Name { get; init; }

        public string Identifier { get; set; }

    }



    public class DropZoneData

    {

        public string Identifier { get; set; }

        public string Text { get; set; }

        public string Icon { get; set; }

    }



    public class CategoryData

    {

        public string Identifier { get; set; }

        public string Text { get; set; }

        public string Icon { get; set; }

    }
}